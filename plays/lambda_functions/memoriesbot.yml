- name: deploy memoriesbot to aws lambda
  hosts: local
  gather_facts: no

  vars:
    project_name: "{{ general_project_name }}-io"
    service_name: "{{ memoriesbot_project_name }}"
    service_url: "{{ memoriesbot_service_url }}"

    repo_name: "{{ service_name }}"
    repo_url: "{{ github_account }}/{{ repo_name }}.git"
    bin_file: "{{ work_dir }}/build/{{ service_name }}.zip"

    user: "{{ runtime_user }}"

    upload_root_dir: "{{ work_dir }}/build"

    aws_s3_bucket_name: "{{ lambda_domain }}"
    aws_lambda_function_description: Revisit memories and get reminded everyday via Telegram
    aws_lambda_runtime: go1.x
    aws_lambda_environment_variables: TELEGRAM_API_KEY={{ memoriesbot_config_telegram_api_key }}

  roles:
    - role: aws/create_secret
      aws_secret_id: "{{ service_name }}/telegram/api-key"
      aws_secret_description: API Key for messaging Telegram bot "@sudharsya"
      aws_secret_string: "{{ memoriesbot_config_telegram_api_key }}"

    - role: aws/create_secret
      aws_secret_id: "{{ service_name }}/telegram/suddi-chat-id"
      aws_secret_description: Telegram ChatId for user "suddi"
      aws_secret_string: "{{ telegram_users.suddi.chat_id }}"

    - role: aws/create_secret
      aws_secret_id: "{{ service_name }}/telegram/natasya-chat-id"
      aws_secret_description: Telegram ChatId for user "natasya"
      aws_secret_string: "{{ telegram_users.natasya.chat_id }}"

    - role: utils/empty_work_dir

    - role: git/get_source_code

    - role: golang/build_go_package
      make_zip: yes

    - role: aws/put_object_to_s3_bucket
      files:
        - "{{ service_name }}.zip"

    - role: aws/execute_cloudformation_stack
      aws_stack_name: "{{ service_name }}-{{ project_name }}-stack"
      aws_stack_file_path: "{{ files_dir }}/cloudformation/memoriesbot_suddi_io.yml"
      aws_stack_parameters: |
          ParameterKey=ProjectName,ParameterValue={{ project_name }}
          ParameterKey=ServiceName,ParameterValue={{ service_name }}
          ParameterKey=Domain,ParameterValue={{ memoriesbot_domain }}
          ParameterKey=HostedZone,ParameterValue={{ general_domain }}.
          ParameterKey=LambdaFunctionsBucket,ParameterValue={{ lambda_domain }}
          ParameterKey=StageName,ParameterValue=prod
      aws_stack_capabilities: CAPABILITY_NAMED_IAM

    - role: aws/deploy_lambda_function
      s3_key: "{{ service_name }}.zip"

    - role: utils/empty_work_dir

    - role: utils/notify_knightwatcher
      message_username: "{{ user }}"
      message_type: deploy
      message_link: "{{ service_url }}"
      message_repo_name: "{{ repo_name }}"
