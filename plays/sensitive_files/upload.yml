- name: upload sensitive files to s3
  hosts: local
  gather_facts: no

  vars:
    project: ansible
    service_name: "{{ project }}-sensitive-files"

    aws_profile: "{{ general_aws_profile }}"
    aws_region: ap-northeast-1
    aws_s3_bucket_name: vault.suddi.io
    aws_s3_acl: private

    upload_root_dir: "{{ project_root_dir }}"

    files: "{{ sensitive_files }}"

  tasks:
    - name: check if {{ aws_s3_bucket_name }} s3 bucket exists
      command: aws s3api head-bucket
        --profile {{ aws_profile }}
        --region {{ aws_region }}
        --bucket {{ aws_s3_bucket_name }}
      register: head_bucket_result
      failed_when: "head_bucket_result.stderr and
        'Not Found' not in head_bucket_result.stderr"

    - name: create {{ aws_s3_bucket_name }} s3 bucket
      command: aws s3api create-bucket
        --profile {{ aws_profile }}
        --region {{ aws_region }}
        --bucket {{ aws_s3_bucket_name }}
        --acl {{ aws_s3_acl }}
        --create-bucket-configuration LocationConstraint={{ aws_region }}
      when: "'Not Found' in head_bucket_result.stderr"

    - name: set versioning for {{ aws_s3_bucket_name }} s3 bucket
      command: aws s3api put-bucket-versioning
        --profile {{ aws_profile }}
        --region {{ aws_region }}
        --bucket {{ aws_s3_bucket_name }}
        --versioning-configuration MFADelete=Disabled,Status=Enabled
      when: "'Not Found' in head_bucket_result.stderr"

    - name: set tags for {{ aws_s3_bucket_name }} s3 bucket
      command: aws s3api put-bucket-tagging
        --profile {{ aws_profile }}
        --region {{ aws_region }}
        --bucket {{ aws_s3_bucket_name }}
        --tagging TagSet=[{Key=project,Value={{ project }}},{Key=service,Value={{ service_name }}},{Key=deployment_method,Value={{ deployment_method }}}]
      when: "'Not Found' in head_bucket_result.stderr"

    - name: put objects to {{ aws_s3_bucket_name }} s3 bucket
      command: aws s3api put-object
        --profile {{ aws_profile }}
        --region {{ aws_region }}
        --bucket {{ aws_s3_bucket_name }}
        --acl {{ aws_s3_acl }}
        --body {{ upload_root_dir }}/{{ item }}
        --key {{ item }}
        --server-side-encryption AES256
        --tagging project={{ project }}&service={{ service_name }}&deployment_method={{ deployment_method }}
      with_items: "{{ files }}"
