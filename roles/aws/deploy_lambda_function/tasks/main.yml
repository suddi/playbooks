- name: get lambda function {{ aws_lambda_function_name }}
  command: aws lambda get-function
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --function-name {{ aws_lambda_function_name }}
  register: get_function_result
  changed_when: no
  failed_when: "get_function_result.stderr and
    'ResourceNotFoundException' not in get_function_result.stderr"

- name: create lambda function {{ aws_lambda_function_name }}
  command: aws lambda create-function
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --function-name {{ aws_lambda_function_name }}
    --description {{ aws_lambda_function_description }}
    --runtime {{ aws_lambda_runtime }}
    --role {{ aws_lambda_role_name }}
    --handler {{ aws_lambda_handler }}
    --version {{ aws_lambda_version }}
    --timeout {{ aws_lambda_timeout }}
    --memory-size {{ aws_lambda_memory }}
    --environment {{ aws_lambda_environment_variables }}
    {% if bin_file is defined %}
      --zip-file fileb://{{ bin_file }}
    {% elif s3_key is defined %}
      --s3-bucket {{ lambda_domain }}
      --s3-key {{ s3_key }}
    {% endif %}
  args:
    chdir: "{{ work_dir }}"
  when: "get_function_result.stderr and
    'ResourceNotFoundException' in get_function_result.stderr"

- name: update lambda function {{ aws_lambda_function_name }} code
  command: aws lambda update-function-code
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --function-name {{ aws_lambda_function_name }}
    {% if bin_file is defined %}
      --zip-file fileb://{{ bin_file }}
    {% elif s3_key is defined %}
      --s3-bucket {{ lambda_domain }}
      --s3-key {{ s3_key }}
    {% endif %}
  args:
    chdir: "{{ work_dir }}"
  when: "get_function_result.stdout"

- name: update lambda function {{ aws_lambda_function_name }} configuration
  command: aws lambda update-function-configuration
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --function-name {{ aws_lambda_function_name }}
    --description {{ aws_lambda_function_description }}
    --runtime {{ aws_lambda_runtime }}
    --role {{ aws_lambda_role_name }}
    --handler {{ aws_lambda_handler }}
    --version {{ aws_lambda_version }}
    --timeout {{ aws_lambda_timeout }}
    --memory-size {{ aws_lambda_memory }}
    --environment {{ aws_lambda_environment_variables }}
  args:
    chdir: "{{ work_dir }}"
  when: "get_function_result.stdout"

- name: get lambda function {{ aws_lambda_function_name }}
  command: aws lambda get-function
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --function-name {{ aws_lambda_function_name }}
  register: get_new_function_result
  changed_when: no

- name: store lambda function arn as fact
  set_fact:
    aws_lambda_arn: "{{ (get_new_function_result.stdout | from_json).Configuration.FunctionArn }}"

- name: tag lambda function {{ aws_lambda_function_name }}
  command: aws lambda tag-resource
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --resource {{ aws_lambda_arn }}
    --tags Name="{{ service_name }}",Service="{{ service_name }}",Project="{{ project_name }}",DeployedBy="{{ deployment_method }}"
