- name: get lambda function
  command: aws lambda get-function
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --function-name {{ aws_lambda_function_name }}
  register: get_function_result
  changed_when: no
  failed_when: "get_function_result.stderr and
    'ResourceNotFoundException' not in get_function_result.stderr"

- name: create lambda function
  command: aws lambda create-function
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --function-name "{{ aws_lambda_function_name }}"
    --description {{ aws_lambda_function_description }}
    --runtime {{ aws_lambda_runtime }}
    --role {{ aws_lambda_role_name }}
    --handler {{ aws_lambda_handler }}
    --version {{ aws_lambda_version }}
    --timeout {{ aws_lambda_timeout }}
    --memory-size {{ aws_lambda_memory }}
    --environment {{ aws_lambda_environment_variables }}
    --zip-file fileb://{{ bin_file }}
  args:
    chdir: "{{ work_dir }}"
  when: "get_function_result.stderr and
    'ResourceNotFoundException' in get_function_result.stderr"

- name: update lambda function code
  command: aws lambda update-function-code
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --function-name "{{ aws_lambda_function_name }}"
    --zip-file fileb://{{ bin_file }}
  args:
    chdir: "{{ work_dir }}"
  when: "get_function_result.stdout"

- name: update lambda function configuration
  command: aws lambda update-function-configuration
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --function-name "{{ aws_lambda_function_name }}"
    --description {{ aws_lambda_function_description }}
    --runtime {{ aws_lambda_runtime }}
    --role {{ aws_lambda_role_name }}
    --handler {{ aws_lambda_handler }}
    --version {{ aws_lambda_version }}
    --timeout {{ aws_lambda_timeout }}
    --memory-size {{ aws_lambda_memory }}
    --environment {{ aws_lambda_environment_variables }}
  args:
    chdir: "{{ work_dir }}"
  when: "get_function_result.stdout"

- name: get lambda function
  command: aws lambda get-function
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --function-name "{{ aws_lambda_function_name }}"
  register: get_new_function_result
  changed_when: no

- name: store lambda function arn as fact
  set_fact:
    aws_lambda_arn: "{{ (get_new_function_result.stdout | from_json).Configuration.FunctionArn }}"

- name: tag lambda function
  command: aws lambda tag-resource
    --profile {{ aws_profile }}
    --region "{{ aws_region }}"
    --resource "{{ aws_lambda_arn }}"
    --tags service="{{ service_name }}",project="{{ project_name }}",deployment_method="{{ deployment_method }}"
