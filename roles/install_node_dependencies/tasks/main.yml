- name: clone nvm repo
  git:
    repo: "{{ dependency_nvm_url }}"
    dest: "{{ dependency_nvm_dir }}"
    force: no
    version: "{{ dependency_nvm_version }}"
  become: yes
  become_user: "{{ user }}"

- name: add .nvmrc to {{ user_home_dir }}/.nvmrc
  template:
    src: .nvmrc
    dest: "{{ user_home_dir }}/.nvmrc"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "0644"
  become: yes
  become_user: "{{ user }}"

- name: add nvm initialization to {{ user_shell_rc_file }}
  lineinfile:
    dest: "{{ user_shell_rc_file }}"
    create: yes
    regexp: "^. $HOME/.nvmrc$"
    state: present
    line: . "$HOME/.nvmrc"
  become: yes
  become_user: "{{ user }}"

- name: nvm install node
  shell: . {{ user_home_dir }}/.nvmrc && nvm install {{ item }}
  register: nvm_install_result
  changed_when: "'Downloading and installing' in nvm_install_result.stdout"
  with_items: "{{ node_versions }}"

- name: get nvm version
  shell: . {{ user_home_dir }}/.nvmrc && nvm --version
  register: nvm_version_result
  changed_when: "False"

- name: print nvm version
  debug:
    msg: "{{ nvm_version_result.stdout }}"

- name: get npm version
  shell: . {{ user_home_dir }}/.nvmrc && npm --version
  register: npm_version_result
  changed_when: "False"

- name: print npm version
  debug:
    msg: "{{ npm_version_result.stdout }}"

- name: get node version
  shell: . {{ user_home_dir }}/.nvmrc && node --version
  register: node_version_result
  changed_when: "False"

- name: print node version
  debug:
    msg: "{{ node_version_result.stdout }}"
