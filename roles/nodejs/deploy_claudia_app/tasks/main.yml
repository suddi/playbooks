- name: get source code
  git:
    repo: "{{ repo_url }}"
    dest: "{{ work_dir }}"
    force: yes
    update: yes
    version: "{{ repo_version }}"

# - name: switch to .nvmrc node version
#   shell: nvm use
#   args:
#     chdir: "{{ work_dir }}"
#     removes: .nvmrc

- name: install npm dependencies for build
  command: npm install
  args:
    chdir: "{{ work_dir }}"

- name: get lambda function
  command: aws lambda get-function
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --function-name {{ aws_lambda_function_name }}
  register: get_function_result
  changed_when: no
  failed_when: "get_function_result.stderr and
    'ResourceNotFoundException' not in get_function_result.stderr"

- name: create lambda function
  command: node_modules/.bin/claudia create
    --region {{ aws_region }}
    --name {{ aws_lambda_function_name }}
    --description {{ aws_lambda_function_description }}
    --runtime {{ aws_lambda_runtime }}
    --role {{ aws_lambda_role_name }}
    --api-module {{ aws_lambda_module }}
    --config {{ aws_lambda_config_json }}
    --version {{ aws_lambda_version }}
    --timeout {{ aws_lambda_timeout }}
    --memory {{ aws_lambda_memory }}
    --security-group-ids {{ aws_lambda_sg_ids }}
    --subnet-ids {{ aws_lambda_subnet_ids }}
    --set-env {{ aws_lambda_environment_variables }}
  args:
    chdir: "{{ work_dir }}"
  environment:
    AWS_PROFILE: "{{ aws_profile }}"
  when: "get_function_result.stderr and
    'ResourceNotFoundException' in get_function_result.stderr"

- name: update lambda function code
  command: node_modules/.bin/claudia update
    --region {{ aws_region }}
    --config {{ aws_lambda_config_json }}
    --version {{ aws_lambda_version }}
    --set-env {{ aws_lambda_environment_variables }}
  args:
    chdir: "{{ work_dir }}"
  environment:
    AWS_PROFILE: "{{ aws_profile }}"
  when: "get_function_result.stdout"

- name: get lambda function
  command: aws lambda get-function
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --function-name {{ aws_lambda_function_name }}
  register: get_new_function_result
  changed_when: no

- name: store lambda function arn as fact
  set_fact:
    aws_lambda_arn: "{{ (get_new_function_result.stdout | from_json).Configuration.FunctionArn }}"

- name: tag lambda function
  command: aws lambda tag-resource
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --resource {{ aws_lambda_arn }}
    --tags Name="{{ service_name }}",Service="{{ service_name }}",Project="{{ project_name }}",DeployedBy="{{ deployment_method }}"

- name: create api gateway usage plan
  command: aws apigateway create-usage-plan
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --name {{ aws_lambda_usage_plan_name }}
    --description "Usage plan for {{ aws_lambda_function_name }}:{{ aws_lambda_version }}"
    --api-stages apiId={{ (lookup('file', aws_lambda_config_json) | from_json).api.id }},stage={{ aws_lambda_version }}
    --throttle burstLimit={{ aws_lambda_burstlimit }},rateLimit={{ aws_lambda_ratelimit }}
  register: api_gateway_usage_plan_result
  when: "create_usage_plan and
    get_function_result.stderr and
    'ResourceNotFoundException' in get_function_result.stderr"

- name: create api gateway api key
  command: aws apigateway create-api-key
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --name {{ aws_lambda_api_key_name }}
    --description "API Key for {{ aws_lambda_function_name }}:{{ aws_lambda_version }}"
    --enabled
    --generate-distinct-id
  register: api_gateway_api_key_result
  when: "create_api_key and
    get_function_result.stderr and
    'ResourceNotFoundException' in get_function_result.stderr"

- name: create api gateway usage plan key
  command: aws apigateway create-usage-plan-key
    --profile {{ aws_profile }}
    --region {{ aws_region }}
    --usage-plan-id {{ (api_gateway_usage_plan_result.stdout | from_json)['id'] }}
    --key-id {{ (api_gateway_api_key_result.stdout | from_json)['id'] }}
    --key-type "API_KEY"
  when: "create_api_key and
    get_function_result.stderr and
    'ResourceNotFoundException' in get_function_result.stderr"
