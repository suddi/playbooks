- name: clone nvm repo
  git:
    repo: "{{ dependency_nvm_url }}"
    dest: "{{ dependency_nvm_dir }}"
    force: no
    version: "{{ dependency_nvm_version }}"

- name: add .nvmrc to {{ user_home_dir }}/.nvmrc
  template:
    src: nvmrc.j2
    dest: "{{ user_home_dir }}/.nvmrc"
    mode: "0644"

- name: add nvm initialization to {{ user_shell_rc_file }}
  lineinfile:
    dest: "{{ user_shell_rc_file }}"
    create: yes
    regexp: "^. $HOME/.nvmrc$"
    state: present
    line: . "$HOME/.nvmrc"
  when: add_rc_initialization is defined and add_rc_initialization

- name: nvm install node
  shell: . {{ user_home_dir }}/.nvmrc && nvm install {{ item }}
  register: nvm_install_result
  changed_when: "'Downloading and installing' in nvm_install_result.stdout"
  with_items: "{{ node_versions }}"

- name: get nvm version
  shell: . {{ user_home_dir }}/.nvmrc && nvm
    --version
  register: nvm_version_result
  changed_when: no

- name: print nvm version
  debug:
    msg: "{{ nvm_version_result.stdout }}"

- name: get npm version
  shell: . {{ user_home_dir }}/.nvmrc && npm
    --version
  register: npm_version_result
  changed_when: no

- name: print npm version
  debug:
    msg: "{{ npm_version_result.stdout }}"

- name: get node version
  command: node
    --version
  register: node_version_result
  changed_when: no

- name: print node version
  debug:
    msg: "{{ node_version_result.stdout }}"
